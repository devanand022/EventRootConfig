<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Root</title>

  <!--
    Remove this if you only support browsers that support async/await.
    This is needed by babel to share largeish helper code for compiling async/await in older
    browsers. More information at https://github.com/single-spa/create-single-spa/issues/112
  -->
  <script src="https://cdn.jsdelivr.net/npm/regenerator-runtime@0.13.7/runtime.min.js"></script>
  <script>
    var checkoutSSPA = {
      runtimeEnvironment: "prod",
      isProdEnv: true,
      isLocalEnv: false,
      appContext: {
        channel: "",
      },
    };
    var host = window.location.hostname;
    if(host.includes('localhost')){
      checkoutSSPA.runtimeEnvironment = "local";
      checkoutSSPA.isProdEnv = false;
      checkoutSSPA.isLocalEnv = true;
    } else if(host.includes('eventrootconfig-dev')){
      checkoutSSPA.runtimeEnvironment = "deva"
      checkoutSSPA.isProdEnv = false;
    } else if(host.includes('eventrootconfig')){
      checkoutSSPA.runtimeEnvironment = "prod"
    }
  </script>
  <!--
    This CSP allows any SSL-enabled host and for arbitrary eval(), but you should limit these directives further to increase your app's security.
    Learn more about CSP policies at https://content-security-policy.com/#directive
  -->
  <meta http-equiv="Content-Security-Policy" content="default-src 'self' https: localhost:*; script-src 'unsafe-inline' 'unsafe-eval' https: localhost:*; connect-src https: localhost:* ws://localhost:*; style-src 'unsafe-inline' https:; object-src 'none';">
  <meta name="importmap-type" content="systemjs-importmap" />
  <!-- If you wish to turn off import-map-overrides for specific environments (prod), uncomment the line below -->
  <!-- More info at https://github.com/joeldenning/import-map-overrides/blob/master/docs/configuration.md#domain-list -->
  <!-- <meta name="import-map-overrides-domains" content="denylist:prod.example.com" /> -->

  <script type="systemjs-importmap">
    {
      "imports": {
        "single-spa": "https://cdn.jsdelivr.net/npm/single-spa@5.9.0/lib/system/single-spa.min.js",
        "react": "https://cdn.jsdelivr.net/npm/react@17.0.2/umd/react.production.min.js",
        "react-dom": "https://cdn.jsdelivr.net/npm/react-dom@17.0.2/umd/react-dom.production.min.js",
        "@devorg/root-config": "/devorg-root-config.js",
        "@devorg/eventlogin": "/devorg-eventlogin.js"
      }
    }
  </script>
  <link rel="preload" href="https://cdn.jsdelivr.net/npm/single-spa@5.9.0/lib/system/single-spa.min.js" as="script">

  <script>
    const importMapScript = document.createElement('script');
    importMapScript.type = 'systemjs-importmap';
    importMapScript.src = `assets/importmaps/importmap.${checkoutSSPA.runtimeEnvironment}.json`;
    document.head.appendChild(importMapScript);
  </script>

  <script>
    const resetStyle = document.createElement('link');
    resetStyle.rel = 'stylesheet';
    resetStyle.href = checkoutSSPA.isLocalEnv ? "../assets/styles/reset.css" : "assets/styles/reset.css";
    document.head.appendChild(resetStyle);
  </script>

  <script src="https://cdn.jsdelivr.net/npm/import-map-overrides@2.2.0/dist/import-map-overrides.js"></script>
  <% if (isLocal) { %>
  <script src="https://cdn.jsdelivr.net/npm/systemjs@6.8.3/dist/system.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/systemjs@6.8.3/dist/extras/amd.js"></script>
  <% } else { %>
  <script src="https://cdn.jsdelivr.net/npm/systemjs@6.8.3/dist/system.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/systemjs@6.8.3/dist/extras/amd.min.js"></script>
  <% } %>

</head>
<body>
  <noscript>
    You need to enable JavaScript to run this app.
  </noscript>
  <script>
    System.import('@devorg/root-config');
  </script>
  <import-map-overrides-full show-when-local-storage="devtools" dev-libs></import-map-overrides-full>
</body>
</html>
